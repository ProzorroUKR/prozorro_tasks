from payments.messages import (
    DESC_REJECT_REASON_LAW_NON_COMPLIANCE, DESC_REJECT_REASON_ALREADY_EXISTS,
    DESC_REJECT_REASON_BUYER_VIOLATIONS_CORRECTED,
    DESC_REJECT_REASON_TENDER_CANCELLED,
    DESC_REJECT_REASON_CANCELLED_BY_COMPLAINANT,
    DESC_REJECT_REASON_COMPLAINT_PERIOD_ENDED,
    DESC_REJECT_REASON_INCORRECT_PAYMENT,
    DESC_FUNDS_STATE,
    DESC_FUNDS_COMPLAINANT,
    COMPLAINT_STATUS_MISTAKEN,
    COMPLAINT_STATUS_RESOLVED,
    COMPLAINT_STATUS_INVALID,
    COMPLAINT_STATUS_SATISFIED,
    COMPLAINT_STATUS_DECLINED,
    COMPLAINT_STATUS_ACCEPTED,
    COMPLAINT_STATUS_STOPPED,
)


def complaint_status_description(status):
    return COMPLAINT_STATUS_DICT.get(status, status)


def complaint_reject_description(reason):
    return DESC_REJECT_REASON_DICT.get(reason, reason)


def complaint_funds_description(funds):
    return DESC_FUNDS_DICT.get(funds, funds)


DESC_REJECT_REASON_DICT = {
    "lawNonCompliance": DESC_REJECT_REASON_LAW_NON_COMPLIANCE,
    "alreadyExists": DESC_REJECT_REASON_ALREADY_EXISTS,
    "buyerViolationsCorrected": DESC_REJECT_REASON_BUYER_VIOLATIONS_CORRECTED,
    "tenderCancelled": DESC_REJECT_REASON_TENDER_CANCELLED,
    "cancelledByComplainant": DESC_REJECT_REASON_CANCELLED_BY_COMPLAINANT,
    "complaintPeriodEnded": DESC_REJECT_REASON_COMPLAINT_PERIOD_ENDED,
    "incorrectPayment": DESC_REJECT_REASON_INCORRECT_PAYMENT,
}


DESC_FUNDS_DICT = {
    "state": DESC_FUNDS_STATE,
    "complainant": DESC_FUNDS_COMPLAINANT
}


COMPLAINT_STATUS_DICT = dict(
    mistaken=COMPLAINT_STATUS_MISTAKEN,
    resolved=COMPLAINT_STATUS_RESOLVED,
    invalid=COMPLAINT_STATUS_INVALID,
    satisfied=COMPLAINT_STATUS_SATISFIED,
    declined=COMPLAINT_STATUS_DECLINED,
    accepted=COMPLAINT_STATUS_ACCEPTED,
    stopped=COMPLAINT_STATUS_STOPPED,
)
